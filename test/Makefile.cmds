#! /usr/bin/make -rRf
#?
#? NAME
#?      Makefile        - makefile for testing O-Saft commands and options
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft project.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  ../Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.cmds 1.6 18/06/13 01:02:32
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.cmds   = 1.6

MAKEFLAGS  += --no-builtin-variables --no-builtin-rules --no-print-directory
.SUFFIXES:

first-cmds-target-is-default: help.test.cmds
    # otherwise the first target from included files would be used

ifeq (,$(_SID.test))
    -include test/Makefile
endif

_MYSELF.cmds        = test/Makefile.cmds
ALL.Makefiles      += $(_MYSELF.cmds)

TEST.cmds.hosts     = localhost
ifdef TEST.hosts
    TEST.cmds.hosts = $(TEST.hosts)
endif

MORE-cmds       = " \
\#               ________________________________________ summary targets _$(_NL)\
 help.test.cmds.all - print available individual targets for testing commands$(_NL)\
 test.help       - test  help   commands and options$(_NL)\
 test.info       - test  info   commands with $(TEST.cmds.hosts)$(_NL)\
 test.check      - test  check  commands with $(TEST.cmds.hosts)$(_NL)\
 test.cipher     - test  cipher commands with $(TEST.cmds.hosts)$(_NL)\
 test.summary    - test summary commands with $(TEST.cmds.hosts)$(_NL)\
 test.local      - test commands with $(TEST.cmds.hosts)$(_NL)\
 test.*.log      - same as test.* but store output in test/testcmd-CMD.log$(_NL)\
 test.cmds.all   - test all commands with $(TEST.cmds.hosts)$(_NL)\
 test.cmds.log   - same as test.cmds.all but store output in test/testcmd-CMD.log$(_NL)\
\#               ________________________________________ special targets _$(_NL)\
 testrun-CMD     - test specific command CMD with $(TEST.cmds.hosts)$(_NL)\
 testrun-CMD.log - same as testrun-CMD but store output in test/testcmd-CMD.log$(_NL)\
\#$(_NL)\
\# Examples: $(_NL)\
\#    make s-ALL.test.cmds $(_NL)\
\#    make testrun-+cn $(_NL)\
\# All following examples are the same: $(_NL)\
\#    make testrun-+info $(_NL)\
\#    make testcmd-egal_localhost TEST.args='+info --header' $(_NL)\
\#    make test.info TEST.args='+info --header' ALL.testinfo=testcmd-egal_ $(_NL)\
\#    make testcmd-001_localhost $(_NL)\
\# All following examples are the same: $(_NL)\
\#    make testrun-+cipher TEST.init='--header --enabled' $(_NL)\
\#    make test-+cipher TEST.init='--header --enabled localhost' $(_NL)\
\#    make test-+cipher TEST.args='--header --enabled localhost' $(_NL)\
\#$(_NL)\
\# Some of the examples above use  localhost  as hostname by default.$(_NL)\
"

# TODO: implement following
#     make test-+help-+VERSION
#     make test-+help-+VERSION TEST.init=--norc
#     make testrun-+cn\ --traceCMD
#     make testrun-'+cn --traceCMD'
#     make testrun-'+cipher --enabled'

HELP-help.test.cmds = print targets for testing $(SRC.pl) commands and options
help.test.cmds:
	@echo " $(_HELP_LINE_)$(_NL) $(_HELP_INFO_)$(_NL) $(_HELP_LINE_)$(_NL)"
	@echo $(MORE-cmds)    ; # no quotes!

help.test.cmds.all:
	@echo "# individual targets for tests"
	@$(MAKE) -s echo=ALL.test.cmds     echo
	@echo ""
	@$(MAKE) -s echo=ALL.test.cmds.log echo
	@echo ""

test.cmds.internal:
	@echo "# TEST.file:       $(TEST.file)"
	@echo "# TEST.cmds.hosts: $(TEST.cmds.hosts)"
	@echo "# ALL.testinfo:    $(words $(ALL.testinfo))  : $(ALL.testinfo)"
	@echo "# ALL.test.info:   $(words $(ALL.test.info)) : $(ALL.test.info)"
	@echo "# ALL.test.cmds:   $(words $(ALL.test.cmds)) : $(ALL.test.cmds)"
	@echo "# -------------------------------------------------------------"

.PHONY: help.test.cmds help.test.cmds.all test.cmds.internal

testcmd-c%:     EXE.pl      = ../$(SRC.pl)
testcmd-c%:     TEST.init   = --header

# for better readability, "speaking names" are used for DDD here

testcmd-c+help-+VERSION_%:      TEST.args  += +VERSION
testcmd-c+help-+help_%:         TEST.args  += +help=command
testcmd-c+help-+ciphers_%:      TEST.args  += +ciphers -V
testcmd-c+help-+version_%:      TEST.args  += +version
testcmd-c+help-+version--v_%:   TEST.args  += +version --v --usr
testcmd-c+help---v+vers_%:      TEST.args  += --v +version
testcmd-c+help---v+help_%:      TEST.args  += --v +help
testcmd-c-help-command_%:       TEST.args  += --help=command
testcmd-c-help-options_%:       TEST.args  += --help=options
testcmd-c-help-cmd_%:           TEST.args  += --help=cmd
testcmd-c-help-opt_%:           TEST.args  += --help=opt
testcmd-c-help-alias_%:         TEST.args  += --help=alias
testcmd-c-help-glossar_%:       TEST.args  += --help=glossar
testcmd-c-help-rfc_%:           TEST.args  += --help=rfc
testcmd-c-help-links_%:         TEST.args  += --help=links
testcmd-c-help-check_%:         TEST.args  += --help=check
testcmd-c-help-regex_%:         TEST.args  += --help=regex
testcmd-c-help-WHY_%:           TEST.args  += --help=WHY
testcmd-c-help-CHECK_%:         TEST.args  += --help=CHECK
testcmd-c-help-cfg-text_%:      TEST.args  += --help=cfg-text
testcmd-c-help-gen-wiki_%:      TEST.args  += --help=gen-wiki
testcmd-c-help-gen-html_%:      TEST.args  += --help=gen-html
testcmd-c-help-gen-cgi_%:       TEST.args  += --help=gen-cgi
testcmd-c-help--yeast-data_%:   TEST.args  += --yeast-data
testcmd-c-help--yeast-prot_%:   TEST.args  += --yeast-prot
testcmd-c+info_%:               TEST.args  += +info
testcmd-c+info--trace-cmd_%:    TEST.args  += +info   --trace-cmd
testcmd-c+info--trace-key_%:    TEST.args  += +info   --trace-key
testcmd-c+info--trace-key-norc_%:   TEST.args  += +info   --trace-key --norc
testcmd-c+check_%:              TEST.args  += +check
testcmd-c+check--trace-key_%:   TEST.args  += +check  --trace-key
testcmd-c+check--trace-key-norc_%:  TEST.args  += +check  --trace-key --norc
testcmd-c+check--trace-norc_%:  TEST.args  += +check  --trace-cmd --trace-time --trace=2 --norc
testcmd-c+check--nossltls_%:    TEST.args  += +check  --nosslv2 --nosslv3 --notlsv1 --notlsv11 --notlsv12 --notlsv13
testcmd-c+cipher_%:             TEST.args  += +cipher
testcmd-c+cipher--force-openssl_%:  TEST.args  += +cipher --force-openssl
testcmd-c+cipher--cipher-openssl_%: TEST.args  += +cipher --cipher-openssl
testcmd-c+cipherall_%:          TEST.args  += +cipherall
testcmd-c+cipherraw_%:          TEST.args  += +cipherraw
testcmd-c+cipher-dh_%:          TEST.args  += +cipher-dh
testcmd-c+cipher-default_%:     TEST.args  += +cipher-default
testcmd-c+ciphercheck_%:        TEST.args  += +ciphercheck
testcmd-c+cipher--nossltls_%:   TEST.args  += +cipher --nosslv2 --nosslv3 --notlsv1 --notlsv11 --notlsv12 --notlsv13
testcmd-c_vuln-+BEAST_%:        TEST.args  += +BEAST
testcmd-c_vuln-+CRIME_%:        TEST.args  += +CRIME
testcmd-c_vuln-+DROWN_%:        TEST.args  += +DROWN
testcmd-c_vuln-+FREAK_%:        TEST.args  += +FREAK
testcmd-c_vuln-+POODLE_%:       TEST.args  += +POODLE
testcmd-c_vuln-+logjam_%:       TEST.args  += +logjam
testcmd-c_vuln-+lucky13_%:      TEST.args  += +lucky13
testcmd-c_vuln-+Sloth_%:        TEST.args  += +Sloth
testcmd-c_vuln-+Sweet32_%:      TEST.args  += +Sweet32
testcmd-c_summ-+bsi_%:          TEST.args  += +bsi
testcmd-c_summ-+TR-02102+_%:    TEST.args  += +TR-02102+
testcmd-c_summ-+EV_%:           TEST.args  += +EV
testcmd-c_summ-+quick_%:        TEST.args  += +quick --trace-arg
testcmd-c_summ-+http_%:         TEST.args  += +http
testcmd-c_summ-+hsts_%:         TEST.args  += +hsts
testcmd-c_summ-+ocsp_%:         TEST.args  += +ocsp
testcmd-c_summ-+preload_%:      TEST.args  += +preload
testcmd-c_summ-+protocols_%:    TEST.args  += +protocols
testcmd-c_summ-+fingerprints_%: TEST.args  += +fingerprints
testcmd-c_summ-+sizes_%:        TEST.args  += +sizes
testcmd-c_summ-+pfs_%:          TEST.args  += +pfs
testcmd-c_summ-+sts_%:          TEST.args  += +sts
testcmd-c_summ-+sni_%:          TEST.args  += +sni
testcmd-c_summ-+vulns_%:        TEST.args  += +vulns

# note that . inside // below is a meta character
# note: no sort because we want the sequence as defined above
ALL.testhelp    = $(shell awk -F% '/^testcmd-c.help/   {print $$1}' $(_MYSELF.cmds))
ALL.testinfo    = $(shell awk -F% '/^testcmd-c.info/   {print $$1}' $(_MYSELF.cmds))
ALL.testcheck   = $(shell awk -F% '/^testcmd-c.check/  {print $$1}' $(_MYSELF.cmds))
ALL.testvuln    = $(shell awk -F% '/^testcmd-c.vuln/   {print $$1}' $(_MYSELF.cmds))
ALL.testcipher  = $(shell awk -F% '/^testcmd-c.cipher/ {print $$1}' $(_MYSELF.cmds))
ALL.testsummary = $(shell awk -F% '/^testcmd-c.summ/   {print $$1}' $(_MYSELF.cmds))
ALL.testlocal   = $(shell awk -F% '/^testcmd-c.local/  {print $$1}' $(_MYSELF.cmds))

ALL.test.help   = $(foreach host,$(TEST.cmds.hosts),$(ALL.testhelp:%=%$(host)))
ALL.test.info   = $(foreach host,$(TEST.cmds.hosts),$(ALL.testinfo:%=%$(host)))
ALL.test.vuln   = $(foreach host,$(TEST.cmds.hosts),$(ALL.testvuln:%=%$(host)))
ALL.test.check  = $(foreach host,$(TEST.cmds.hosts),$(ALL.testcheck:%=%$(host)))
ALL.test.cipher = $(foreach host,$(TEST.cmds.hosts),$(ALL.testcipher:%=%$(host)))
ALL.test.summary= $(foreach host,$(TEST.cmds.hosts),$(ALL.testsummary:%=%$(host)))
ALL.test.local  = $(foreach host,$(TEST.cmds.hosts),$(ALL.testlocal:%=%$(host)))

ALL.test.cmds   = \
		  $(ALL.test.help) \
		  $(ALL.test.info) \
		  $(ALL.test.check) \
		  $(ALL.test.cipher) \
		  $(ALL.test.summary) \
		  $(ALL.test.local)
ALL.test.cmds.log   = $(ALL.test.cmds:%=%.log)

# testrun target to allow something like:  testrun-+my-fancy-command
# note that we use  testrun-+%  and not  testrun+%  to avoid double definition
# of the pattern rule (problem in GNUmake)
# unfortunatelly this restrict the usage to pattern starting with +
testrun-+%: TEST.args += $(TEST.cmds.hosts)
testrun-%: testcmd-%
	@echo -n ""

# TODO: use target _no-hosts
# for debugging add test.cmds.internal to the target's dependencies
test.help:          $(ALL.test.help)
test.info:          $(ALL.test.info)
test.check:         $(ALL.test.check)
test.cipher:        $(ALL.test.cipher)
test.summary:       $(ALL.test.summary)
test.local:         $(ALL.test.local)

test.help.log:      $(ALL.test.info:%=%.log)
test.info.log:      $(ALL.test.info:%=%.log)
test.check.log:     $(ALL.test.info:%=%.log)
test.cipher.log:    $(ALL.test.info:%=%.log)
test.summary.log:   $(ALL.test.info:%=%.log)
test.local.log:     $(ALL.test.info:%=%.log)

test.cmds.all:      $(ALL.test.cmds)
test.cmds.log:      $(ALL.test.cmds.log)

test.cmds.all-%:    test.cmds.internal test.cmds.all

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

# feed main Makefile
ALL.tests      += $(ALL.test.cmds)
ALL.tests.log  += test.cmds.log

