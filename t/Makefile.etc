#! /usr/bin/make -rRf
#?
#? DESCRIPTION
#?      For more details please see
#?          ../Makefile  Makefile  Makefile.help  Makefile.pod
#?      make help.test.etc
#?
#? VERSION
#?      @(#) Makefile.etc 1.7 19/11/14 00:10:21
#?
#? AUTHOR
#?      19-mar-19 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

HELP-help.test.etc  = targets for testing ciphers with various other tools

_SID.etc           := 1.7

_MYSELF.etc        := t/Makefile.etc
ALL.includes       += $(_MYSELF.etc)
ALL.inc.type       += etc
ALL.help.tests     += help.test.etc

ifeq (,$(_SID.test))
    -include t/Makefile
endif

first-etc-target-is-default: help.test.etc

help.test.etc:          HELP_TYPE   = etc
help.test.etc-v:        HELP_TYPE   = etc
help.test.etc-vv:       HELP_TYPE   = etc

#_____________________________________________________________________________
#________________________________________________________________ variables __|

EXE.pl         := ../o-saft.pl
TEST.init      :=
TEST.args      :=

TEST.etc.hosts  =
ifdef TEST.hosts
    TEST.etc.hosts  = $(TEST.hosts)
endif

#_____________________________________________________________________________
#______________________________________________________________ testing ... __|

HELP-_etc1          = ________________________________________________ testing ... _
HELP-test.etc       = various legacy tests
HELP-test.etc.log   = same as test.etc but store output in '$(TEST.logdir)/'
HELP-testcmd-etc-sslscan1.8     = test with sslscan version 1.8
HELP-testcmd-etc-sslscan1.11    = test with sslscan version 1.11.9
HELP-testcmd-etc-osaft_*        = test with o-saft.pl +cipher*
HELP-test.etc-cipher.all        = test all tools with cipher tests
HELP-test.etc-cipher.all.log    = same as HELP-test-cipher.all but store output in '$(TEST.logdir)/'

HELP.etc            = # no general documentation yet

HELP.test.etc.all   = # no special documentation yet

TEST.init  = localhost
TEST.hosts = $(TEST.init)

# testcmd-etc-sslscan* are defined as static targets, similar to testcmd-% , they
# can be used in the corresponding *.log target (pattern rule) automatically

testcmd-etc-sslscan1.8:  EXE.pl    = /usr/bin/sslscan
testcmd-etc-sslscan1.8:  TEST.args = --no-failed
testcmd-etc-sslscan1.8:
	@cd $(TEST.dir) && $(EXE.pl) $(TEST.args) $(TEST.hosts)

testcmd-etc-sslscan1.11: EXE.pl    = /opt/bin/sslscan-1.11.9
testcmd-etc-sslscan1.11: TEST.args = --no-failed --no-check-certificate --no-heartbleed
testcmd-etc-sslscan1.11:
	@cd $(TEST.dir) && $(EXE.pl) $(TEST.args) $(TEST.hosts)

testcmd-etc-testssl.sh:  EXE.pl    = testssl.sh
testcmd-etc-testssl.sh:  TEST.args = -e --color 0
testcmd-etc-testssl.sh: 
	@cd $(TEST.dir) && $(EXE.pl) $(TEST.args) $(TEST.hosts)

# use testcmd-% pattern rule for all o-saft.pl +cipher tests
testcmd-etc-osaft_%:     TEST.args = --enabled --header --no-hint
testcmd-etc-osaft_--legacy-owasp: TEST.args = +cipher --enabled --header --legacy=owasp
    # tricky illegal option to enforce another (second) command with +cipher

_etc-osaft-CMDS    := +cipher +cipherraw

ALL.test.etc-cipher = \
	testcmd-etc-sslscan1.8 \
	testcmd-etc-sslscan1.11 \
	testcmd-etc-testssl.sh \
	testcmd-etc-osaft_--legacy-owasp \
	$(_etc-osaft-CMDS:%=testcmd-etc-osaft_%) 
ALL.test.etc-cipher.log = $(ALL.test.etc-cipher:%=%.log)

# TODO: targets for following:
# common test wih openssl:
#    echo | openssl s_client -tlsextdebug -msg -connect ${fqdn}:443 2>&1 | grep " Start"
# DESCRIPTION
#      Debugging with special ciphers.
#      All programs need to return same list of ciphers.
#      Result with or without SNI may be different.
#
_CIPHERS    := DES-CBC3-SHA AES256-SHA ECDHE-RSA-AES256-SHA ECDHE-RSA-AES128-GCM-SHA256
#_CIPHER_LIST = $(shell $(_CIPHERS) :)
#_CIPHER_REGEX= $(shell $(_CIPHERS) |)
#  without SSI:
#    sslscan --tlsall --sni-name="x"  $host  |egrep "($(_CIPHER_REGEX))"
#    o-saft.pl --tracecmd         --cipher=$(_CIPHER_LIST) +cipher    $host --nosni
#    o-saft.pl --tracecmd         --cipher=$(_CIPHER_LIST) +cipher    $host --nosni --force-openssl
#    o-saft.pl --tracecmd --trace --cipher=$(_CIPHER_LIST) +cipher    $host --nosni
#    o-saft.pl --tracecmd --trace --cipher=$(_CIPHER_LIST) +cipher    $host --nosni --force-openssl
# ALL.test-openssl = $(_CIPHERS:%=%testcmd-openssl_%))
#
#  with SSI:
#    sslscan --tlsall                 $host  |egrep "($(_CIPHER_REGEX))"
#    o-saft.pl --tracecmd         --cipher=$(_CIPHER_LIST) +cipher    $host
#    o-saft.pl --tracecmd --trace --cipher=$(_CIPHER_LIST) +cipher    $host

test.etc-cipher.all:     $(ALL.test.etc-cipher)
test.etc-cipher.all.log: $(ALL.test.etc-cipher.log)

ALL.test.etc       += $(ALL.test.etc-cipher)
ALL.test.etc.log   += $(ALL.test.etc-cipher.log)

test.etc-cipher.all.log-compare:  TEST.target_prefix = testcmd-etc
test.etc-cipher.all.log-move:     TEST.target_prefix = testcmd-etc
test.etc-cipher.all.log-compare:  test.log-compare
test.etc-cipher.all.log-move:     test.log-move
    # TODO: test.etc-cipher.all.log-compare not automatically shown in test.etc-cipher.all

testetc-%: message-%
	@$(EXE.dummy)

#_____________________________________________________________________________
#______________________________________________________ targets for testing __|

test.etc.log-compare:   TEST.target_prefix  = testcmd-etc
test.etc.log-move:      TEST.target_prefix  = testcmd-etc

test.etc.all:   $(ALL.test.etc)
test.etc:       test.etc.all
test.etc.log:   $(ALL.test.etc.log)

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

# feed main Makefile
ALL.tests      += $(All.test.etc)
ALL.tests.log  += $(ALL.test-osaft.log)

