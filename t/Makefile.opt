#! /usr/bin/make -rRf
#?
# TODO: initial version, needs to be completed
##############################################################################
#? NAME
#?      Makefile        - makefile for testing O-Saft options
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft project.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  ../Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.opt 1.3 18/11/07 23:59:58
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.opt        = 1.3

_MYSELF.opt     = t/Makefile.opt
ALL.includes   += $(_MYSELF.opt)
ALL.inc.type   += opt

MAKEFLAGS      += --no-builtin-variables --no-builtin-rules --no-print-directory
.SUFFIXES:

first-opt-target-is-default: help.test.opt

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.opt.hosts      = localhost
ifdef TEST.hosts
    TEST.opt.hosts  = $(TEST.hosts)
endif

HELP.opt        = "\
\#               ________________________________________ testing options _$(_NL)\
 test.opt        - test various alias options$(_NL)\
 test.opt.log    - same as test.opt but store output in t/testcmd-CMD.log$(_NL)\
\#$(_NL)\
\# Examples: $(_NL)\
\#    make s-ALL.test.opt $(_NL)\
"

ALL.help.test  += $(_NL)$(HELP.opt)

HELP-help.test.opt  = print targets for testing '$(SRC.pl)' options

testopt-alias%:                EXE.pl      = ../$(SRC.pl)
testopt-alias%:                TEST.init   = --traceARG --v +quit

# The part right of the  _  in the target name testarg0-alias*  is the pattern
# to be searched for in the output of $(EXE.pl).  As this might contain chars
# not allowed in make's target names, . (dot) are used (i.e. for = or space).

testopt-alias_enabled..1:      TEST.args  += --exit=MAIN  -b
testopt-alias_enabled..2:      TEST.args  += --exit=MAIN  -b
testopt-alias_ca_path..x:      TEST.args  += --exit=MAIN  -c x

# folgende noch in passende Makefile verschieben
testopt-alias_HOST0:            TEST.init   =
#testarg0-alias_HOST0:           TEST.args  += --exit=HOST0 +cn demo demo:42 egal --port 23 localhost
testopt-alias_HOST0:            TEST.args  += --exit=HOST0 +cn ::1 ::244

# yeast.pl --exit=HOST0 +cn demo demo:42 egal --port 23 localhost ::1/erkannt_aber_falsch "[::266]" --port=22 "[::244]:32/egal" ::1:333/x/ambigious_port_falsch

testopt-alias_%: message-%
	@echo ""

testarg0-stdformat-%:           EXE.pl      = ../$(SRC.pl)
testarg0-stdformat-%:           TEST.init   = --no-rc --help=pod

testarg0-stdformat-crlf:        TEST.args  += --stdformat=crlf
testarg0-stdformat-raw:         TEST.args  += --stdformat=raw
testarg0-stdformat-unix:        TEST.args  += --stdformat=unix
testarg0-stdformat-utf8:        TEST.args  += --stdformat=utf8
testarg0-stdformat-UTF8:        TEST.args  += --stdformat=UTF-8
testarg0-stdformat-UTF-8: testarg0-stdformat-UTF8

#       message-"enabled= 1"
# note: no sort because we want the sequence as defined above
ALL.testalias       = $(shell awk -F: '/^testarg0-alias_[^%]/     {print $$1}' $(_MYSELF.opt))
ALL.teststdformat   = $(shell awk -F: '/^testarg0-stdformat-[^%]/     {print $$1}' $(_MYSELF.opt))
ALL.test.stdformat  = $(ALL.teststdformat)
ALL.testopt    += $(ALL.testalias)
ALL.testopt    += $(ALL.teststdformat)

test.stdformat  = $(ALL.teststdformat)
.PHONY: test.stdformat

#ALL.test.opt    = $(foreach host,$(TEST.opt.hosts),$(ALL.testhelp:%=%$(host)))

ALL.test.opt    = $(ALL.testopt)
ALL.test.opt.log= $(ALL.testopt:%=%.log)

# TODO: use target _no-hosts
# for debugging add test.opt.internal to the target's dependencies
test.opt:         $(ALL.test.opt)
test.opt.log:     $(ALL.test.opt.log)
test.opt-%:       test.opt.internal test.opt

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

# feed main Makefile
ALL.tests      += $(ALL.test.opt)
ALL.tests.log  += $(ALL.test.opt.log)

