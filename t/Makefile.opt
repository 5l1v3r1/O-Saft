#! /usr/bin/make -rRf
#?
# TODO: initial version, needs to be completed
##############################################################################
#? NAME
#?      Makefile        - makefile for testing O-Saft options
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft project.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  ../Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.opt 1.1 18/09/27 07:44:16
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.opt        = 1.1

_MYSELF.opt     = t/Makefile.opt
ALL.includes   += $(_MYSELF.opt)

MAKEFLAGS      += --no-builtin-variables --no-builtin-rules --no-print-directory
.SUFFIXES:

first-opt-target-is-default: help.test.opt
    # otherwise the first target from included files would be used

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.opt.hosts      = localhost
ifdef TEST.hosts
    TEST.opt.hosts  = $(TEST.hosts)
endif

MORE-opt        = " \
\#               ________________________________________ summary targets _$(_NL)\
 help.test.opt.all - print available individual targets for testing options$(_NL)\
 test.opt        - test various alias options$(_NL)\
 test.opt.log    - same as test.opt but store output in t/testcmd-CMD.log$(_NL)\
\#$(_NL)\
\# Examples: $(_NL)\
\#    make s-ALL.test.opt $(_NL)\
\#$(_NL)\
"

HELP-help.test.opt  = print targets for testing $(SRC.pl) commands and options
help.test.opt:
	@echo " $(_HELP_LINE_)$(_NL) $(_HELP_INFO_)$(_NL) $(_HELP_LINE_)$(_NL)"
	@echo $(MORE-opt)    ; # no quotes!

help.test.opt.all:
	@echo "# individual targets for tests"
	@$(MAKE) -s echo=ALL.test.opt     echo
	@echo ""

test.opt.internal:
	@echo "# TEST.file:       $(TEST.file)"
	@echo "# TEST.opt.hosts: $(TEST.opt.hosts)"
	@echo "# ALL.test.opt:    $(words $(ALL.test.opt))  : $(ALL.test.opt)"
	@echo "# -------------------------------------------------------------"

.PHONY: help.test.opt help.test.opt.all test.opt.internal

testopt-alias%: EXE.pl      = ../$(SRC.pl)
testopt-alias%: EXE.pl      = ../yeast.pl
testopt-alias%: TEST.init   = --traceARG --v +quit

# The part right of the  _  in the target name testopt-alias*  is the pattern
# to be searched for in the output of $(EXE.pl).  As this might contain chars
# not allowed in make's target names, . (dot) are used (i.e. for = or space).

#message-enabled..1:     TEST.args  += --exit=MAIN  -b
#message-ca_path..x:     TEST.args  += --exit=MAIN  -c x
testopt-alias_enabled..1:     TEST.args  += --exit=MAIN  -b
testopt-alias_enabled..2:     TEST.args  += --exit=MAIN  -b
testopt-alias_ca_path..x:     TEST.args  += --exit=MAIN  -c x

# folgende noch in passende Makefile verschieben
testopt-alias_HOST0:     TEST.init   =
testopt-alias_HOST0:     TEST.args  += --exit=HOST0 +cn demo demo:42 egal --port 23 localhost
testopt-alias_HOST0:     TEST.args  += --exit=HOST0 +cn ::1 ::244

# yeast.pl --exit=HOST0 +cn demo demo:42 egal --port 23 localhost ::1/erkannt_aber_falsch "[::266]" --port=22 "[::244]:32/egal" ::1:333/x/ambigious_port_falsch

testopt-alias_%: message-%
	@echo "x"

#       message-"enabled= 1"
# note that . inside // below is a meta character
# note: no sort because we want the sequence as defined above
ALL.testopt     = $(shell awk -F: '/^testopt-alias_[^%]/   {print $$1}' $(_MYSELF.opt))

#ALL.test.opt    = $(foreach host,$(TEST.opt.hosts),$(ALL.testhelp:%=%$(host)))

ALL.test.opt    = $(ALL.testopt)
ALL.test.opt.log= $(ALL.testopt:%=%.log)

# TODO: use target _no-hosts
# for debugging add test.opt.internal to the target's dependencies
test.opt:         $(ALL.test.opt)
test.opt.log:     $(ALL.test.info:%=%.log)
test.opt-%:       test.opt.internal test.opt

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

# feed main Makefile
ALL.tests      += $(ALL.test.opt)
ALL.tests.log  += test.opt.log

