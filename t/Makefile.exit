#! /usr/bin/make -rRf
#?
#? NAME
#?      Makefile        - makefile for testing O-Saft --exit= options
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft --exit=* options.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.exit 1.8 19/03/11 00:00:57
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.exit       = 1.8

_MYSELF.exit    = t/Makefile.exit
ALL.includes   += $(_MYSELF.exit)
ALL.inc.type   += exit

first-exit-target-is-default: help.test.exit

ALL.help.test  += help.test.exit

HELP-help.test.exit = print targets for testing '$(SRC.pl)' --exit= option
help.test.exit:     _HELP_TYP__ = exit
help.test.exit-v:   _HELP_TYP__ = exit
help.test.exit-vv:  _HELP_TYP__ = exit


ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.exit.hosts     = localhost
ifdef TEST.hosts
    TEST.exit.hosts = $(TEST.hosts)
endif


HELP-_exit1         = ___________________________________ testing --exit* option _
HELP-test.exit      = test --exit=* options
HELP-test.exit.log  = same as test.exit but store output in t/test.exit.log

HELP.exit           = # no special documentation yet
HELP.test.exit.all  = # no special documentation yet

# all known --exit=  are shown with:  o-saft.pl --norc --help=exit
test.exit.labels    = \
	BEGIN0 BEGIN1 \
	INIT0  WARN   \
	CONF0  CONF1  \
	INIT1  ARGS   \
	MAIN   \
	HOST0  HOST1 HOST2 HOST3 HOST4 HOST5 HOST6 HOST8 HOST9 \
	END

# SEE Make:target name
# SEE Make:target name prefix
# using prefix testmsg- to avoid conflict with pattern rule testcmd-%

testmsg-exit-%:         EXE.pl      = ../$(SRC.pl)
testmsg-exit-%:         TEST.init   = +cn $(TEST.host)

testmsg-exit-000:       TEST.args  += --exit=invalid_label_to_show_failed-status
testmsg-exit-BEGIN0:    TEST.args  += --exit=BEGIN0
testmsg-exit-BEGIN1:    TEST.args  += --exit=BEGIN1
testmsg-exit-INIT0:     TEST.args  += --exit=INIT0
testmsg-exit-WARN:      TEST.args  += --exit=WARN   +force-warning
testmsg-exit-CONF0:     TEST.args  += --exit=CONF0
testmsg-exit-CONF1:     TEST.args  += --exit=CONF1
testmsg-exit-INIT1:     TEST.args  += --exit=INIT1
testmsg-exit-ARGS:      TEST.args  += --exit=ARGS
testmsg-exit-MAIN:      TEST.args  += --exit=MAIN
testmsg-exit-HOST0:     TEST.args  += --exit=HOST0
testmsg-exit-HOST1:     TEST.args  += --exit=HOST1
testmsg-exit-HOST2:     TEST.args  += --exit=HOST2
testmsg-exit-HOST3:     TEST.args  += --exit=HOST3
testmsg-exit-HOST4:     TEST.args  += --exit=HOST4
test.exit-HOST4:     TEST.args  += --exit=HOST4
testmsg-exit-HOST5:     TEST.args  += --exit=HOST5
testmsg-exit-HOST6:     TEST.args  += --exit=HOST6
testmsg-exit-HOST7:     TEST.args  += --exit=HOST7
testmsg-exit-HOST8:     TEST.args  += --exit=HOST8
testmsg-exit-HOST9:     TEST.args  += --exit=HOST9
testmsg-exit-END:       TEST.args  += --exit=END

testmsg-exit-%: message-%
	@echo -n ""

testmsg-exit.log:  $(TEST.logdir)
	@$(TARGET_VERBOSE)
	@$(eval _NEW.log := $(TEST.logdir)/$@-$(_TODAY_))
	@echo "# Makefile.exit 1.8: $(MAKE) $@" > $@
	@$(MAKE) $(MFLAGS) -s $(ALL.test.exit) >> $@ 2>&1
	@-diff $(TEST.logdir)/$@ $@ 2>/dev/null \
	    && rm $@ \
	    || mv $@ $(_NEW.log)
	@-test -f $(TEST.logdir)/$@  ||  mv $(_NEW.log) $(TEST.logdir)/$@
	@-ls -l  $(TEST.logdir)/$(@)*
# FIXME: need to remove $(_NEW.log) when -n was given
# TODO: use global target from t/Makefile

ALL.test.exit.log   = test.exit.log

#ALL.testexit   = same as ALL.test.exit
ALL.test.exit   = $(test.exit.labels:%=testmsg-exit-%)
test.exit.all:  $(ALL.test.exit)
test.exit:      test.exit.all

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

ALL.tests      += $(ALL.test.exit)
ALL.tests.log  += $(ALL.test.exit.log)

