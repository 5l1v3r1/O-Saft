#! /usr/bin/make -rRf
#?
#? NAME
#?      Makefile        - makefile for testing O-Saft options
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft --exit=* options.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  ../Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.exit 1.1 18/08/10 22:42:20
#?
#? AUTHOR
#?      18-apr-18 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.exit       = 1.1

_MYSELF.exit    = t/Makefile.exit
ALL.includes   += $(_MYSELF.exit)

MAKEFLAGS      += --no-builtin-variables --no-builtin-rules --no-print-directory
.SUFFIXES:

first-exit-target-is-default: help.test.exit

ifeq (,$(_SID.test))
    -include t/Makefile
endif

TEST.exit.hosts     = localhost
ifdef TEST.hosts
    TEST.exit.hosts = $(TEST.hosts)
endif

MORE-exit       = " \
\#               _______________________________________ testing --exit=* _$(_NL)\
 test.exit       - test --exit=* options$(_NL)\
 test.exit.log   - same as test.exit but store output in t/test.exit.log$(_NL)\
\#$(_NL)\
\# Examples (get list of all targets): $(_NL)\
\#    make s-ALL.test.exit $(_NL)\
\#$(_NL)\
"

HELP-help.test.exit  = print targets for testing $(SRC.pl) commands and options
help.test.exit:
	@echo " $(_HELP_LINE_)$(_NL) $(_HELP_INFO_)$(_NL) $(_HELP_LINE_)$(_NL)"
	@echo $(MORE-exit)   ; # no quotes!

.PHONY: help.test.exit

#_____________________________________________________________________________
#________________________________________________________________ variables __|

# all known --exit=  are shown with:  o-saft.pl --norc --help=exit
test.exit.labels    = \
	BEGIN0 BEGIN1 \
	INIT0  WARN   \
	CONF0  CONF1  \
	INIT1  ARGS   \
	MAIN   \
	HOST0  HOST1 HOST2 HOST3 HOST4 HOST5 HOST6 HOST8 HOST9 \
	END

test.exit-%:        EXE.pl      = ../$(SRC.pl)
test.exit-%:        TEST.init   = +cn $(TEST.host)

test.exit-000:      TEST.args  += --exit=invalid_label_to_show_failed-status
test.exit-BEGIN0:   TEST.args  += --exit=BEGIN0
test.exit-BEGIN1:   TEST.args  += --exit=BEGIN1
test.exit-INIT0:    TEST.args  += --exit=INIT0
test.exit-WARN:     TEST.args  += --exit=WARN   +force-warning
test.exit-CONF0:    TEST.args  += --exit=CONF0
test.exit-CONF1:    TEST.args  += --exit=CONF1
test.exit-INIT1:    TEST.args  += --exit=INIT1
test.exit-ARGS:     TEST.args  += --exit=ARGS
test.exit-MAIN:     TEST.args  += --exit=MAIN
test.exit-HOST0:    TEST.args  += --exit=HOST0
test.exit-HOST1:    TEST.args  += --exit=HOST1
test.exit-HOST2:    TEST.args  += --exit=HOST2
test.exit-HOST3:    TEST.args  += --exit=HOST3
test.exit-HOST4:    TEST.args  += --exit=HOST4
test.exit-HOST5:    TEST.args  += --exit=HOST5
test.exit-HOST6:    TEST.args  += --exit=HOST6
test.exit-HOST7:    TEST.args  += --exit=HOST7
test.exit-HOST8:    TEST.args  += --exit=HOST8
test.exit-HOST9:    TEST.args  += --exit=HOST9
test.exit-END:      TEST.args  += --exit=END

test.exit-%: message-%
	@echo -n ""

ALL.test.exit       = $(test.exit.labels:%=test.exit-%)

test.exit:          $(ALL.test.exit)

_EXIT.log           = $(TEST.logdir)/test.exit.log-$(_TODAY_)
$(_EXIT.log):
	@echo "# Makefile.exit 1.1: make test.exit.log" > $@
	@$(MAKE) -s $(ALL.test.exit) >> $@ 2>&1
test.exit.log:      $(_EXIT.log)

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

ALL.tests          += $(ALL.test.exit)
ALL.tests.log      += test.exit.log

