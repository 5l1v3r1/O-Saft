#! /usr/bin/make -rRf
#?
#? NAME
#?      Makefile        - makefile for testing O-Saft internal documentation
#?
#? SYNOPSYS
#?      make [options] [target] [...]
#?
#? DESCRIPTION
#?      Makefile to perform testing tasks for O-Saft internal documentation.
#?
#? LIMITATIONS
#?      Requires GNU Make > 2.0.
#?
# HACKER's INFO
#       For details please see
#           ../Makefile  Makefile.help  Makefile.template
#
#? VERSION
#?      @(#) Makefile.doc 1.10 19/07/10 01:03:00
#?
#? AUTHOR
#?      19-apr-19 Achim Hoffmann
#?
# -----------------------------------------------------------------------------

_SID.doc        = 1.10

_MYSELF.doc     = t/Makefile.doc
_MY.includes   += $(_MYSELF.doc)
_MY.inc.type   += doc

first-doc-target-is-default: help.test.doc

ALL.help.test  += help.test.doc

HELP-help.test.doc  = targets for testing internal documentation and functionality
help.test.doc:        HELP_TYPE = doc
help.test.doc-v:      HELP_TYPE = doc
help.test.doc-vv:     HELP_TYPE = doc

ifeq (,$(_SID.test))
    -include t/Makefile
endif

#_____________________________________________________________________________
#________________________________________________________________ variables __|

TEST.doc.hosts  =

EXE.osaft       = ./osaft.pm
EXE.osaft-dbx   = ./o-saft-dbx.pm
EXE.osaft-man   = ./o-saft-man.pm
EXE.osaft-usr   = ./o-saft-usr.pm
EXE.osaftcipher = ./OSaft/Ciphers.pm
EXE.osaftdata   = ./OSaft/Doc/Data.pm

HELP-_doc1          = __________________________ testing internal documentations _
HELP-test.doc       = test various internal documentation and functionality
HELP-test.doc.log   = same as test.doc but store output in '$(TEST.logdir)/'

HELP.doc            = # no special documentation yet
HELP.test.doc.all   = # no special documentation yet

#_____________________________________________________________________________
#______________________________________________________ targets for testing __|

# remember: testarg0-% executes:
#       cd $(TEST.dir) && $(EXE.pl) $(TEST.init) $(TEST.args)

# redefine TEST.dir and TEST.log, otherwise modules called by EXE.pl will not
# find their incudes; only done for our targets (otherwise breaks other make
# targets)
testarg0-doc%:                  TEST.dir    = .
testarg0-doc%:                  TEST.logdir = ./t/log

# osaft.pm
HELP-test.doc1      = targets for testing internal functionality of osaft.pm
HELP-test.doc1.log  = same as test.doc1 but store output in '$(TEST.logdir)/'
testarg0-doc1-%:                EXE.pl      = $(EXE.osaft)
testarg0-doc1---help:           TEST.args   = --help
# osaft.pm's --test-* option require data defined in $(SRC.pl), hence using $(SRC.pl)
testarg0-doc1--test%:           EXE.pl      = $(SRC.pl)
testarg0-doc1--test-regex:      TEST.args   = --test-regex

# OSaft/Doc/Data.pm
testarg0-doc2-%:                EXE.pl      = $(EXE.osaftdata)
testarg0-doc2-%:                TEST.args   = help.txt
testarg0-doc2---help:           TEST.args   =
testarg0-doc2---help:           TEST.init   = --help
testarg0-doc2-version:          TEST.init   = version
testarg0-doc2-+VERSION:         TEST.init   = +VERSION
testarg0-doc2-list:             TEST.init   = list
testarg0-doc2-print:            TEST.init   = print
testarg0-doc2-get:              TEST.init   = get
testarg0-doc2-get:              TEST.args   = help.txt
testarg0-doc2-get-markup:       TEST.init   = get-markup
testarg0-doc2-get-text:         TEST.init   = get-text
testarg0-doc2-get-as-text:      TEST.init   = get-as-text

# OSaft/Ciphers.pm
testarg0-doc3-%:                EXE.pl      = $(EXE.osaftcipher)
testarg0-doc3-%:                TEST.init   =
testarg0-doc3---help:           TEST.args   = --help
testarg0-doc3-description:      TEST.args   = description
testarg0-doc3-alias:            TEST.args   = alias
testarg0-doc3-const:            TEST.args   = const
testarg0-doc3-names:            TEST.args   = names
testarg0-doc3-overview:         TEST.args   = overview
testarg0-doc3-rfc:              TEST.args   = rfc
testarg0-doc3-version:          TEST.args   = version
testarg0-doc3-cipher-dump:      TEST.args   = ciphers=dump
testarg0-doc3-cipher-osaft:     TEST.args   = ciphers=osaft
testarg0-doc3-cipher-yeast:     TEST.args   = ciphers=yeast
testarg0-doc3-cipher-openssl:   TEST.args   = ciphers=openssl
testarg0-doc3-cipher-dumptab:   TEST.args   = ciphers=dumptab
testarg0-doc3-getter:           TEST.args   = getter=0xC0,0xC2
testarg0-doc3-hex:              TEST.args   = key=ECDHE-ECDSA-AES256-GCM-SHA384
testarg0-doc3-key:              TEST.args   = key=ECDHE-ECDSA-AES256-GCM-SHA384
#testarg0-doc3-getter:           TEST.args   = getter=0xCC,0xA9
#testarg0-doc3-key:              TEST.args   = key=ECDHE-ECDSA-CHACHA20-POLY1305-SHA256

# o-saft-*.pm
testarg0-doc%:                  TEST.args   = --help
#testarg0-doc5--help:            EXE.pl      = $(EXE.osaft-man)
testarg0-doc6--help:            EXE.pl      = $(EXE.osaft-dbx)
testarg0-doc7--help:            EXE.pl      = $(EXE.osaft-usr)

HELP-test.doc5      = targets for testing internal functionality of o-saft-man.pm
HELP-test.doc5.log  = same as test.doc5 but store output in '$(TEST.logdir)/'
# tests are functionally the same as testarg0-h--help-* from Makefile.hlp
testarg0-doc5-%:                EXE.pl      = $(EXE.osaft-man)
testarg0-doc5-FAQ:              TEST.args   = FAQ
testarg0-doc5-WHY:              TEST.args   = WHY
testarg0-doc5-CHECK:            TEST.args   = CHECK
testarg0-doc5-alias:            TEST.args   = alias
testarg0-doc5-check:            TEST.args   = check
testarg0-doc5-cmd:              TEST.args   = cmd
testarg0-doc5-commands:         TEST.args   = commands
testarg0-doc5-compliance:       TEST.args   = compliance
testarg0-doc5-content:          TEST.args   = content
testarg0-doc5-data:             TEST.args   = data
testarg0-doc5-glossar:          TEST.args   = glossar
testarg0-doc5-intern:           TEST.args   = intern
testarg0-doc5-help:             TEST.args   = help
testarg0-doc5-hint:             TEST.args   = hint
testarg0-doc5-legacy:           TEST.args   = legacy
testarg0-doc5-links:            TEST.args   = links
testarg0-doc5-opt:              TEST.args   = opt
testarg0-doc5-options:          TEST.args   = options
testarg0-doc5-ourstr:           TEST.args   = ourstr
testarg0-doc5-pattern:          TEST.args   = pattern
testarg0-doc5-range:            TEST.args   = range
testarg0-doc5-regex:            TEST.args   = regex
testarg0-doc5-rfc:              TEST.args   = rfc
testarg0-doc5-text:             TEST.args   = text
testarg0-doc5-toc:              TEST.args   = toc
testarg0-doc5-todo:             TEST.args   = todo
testarg0-doc5-tools:            TEST.args   = tools
testarg0-doc5-warning:          TEST.args   = warning
testarg0-doc5-exit:             TEST.args   = exit
testarg0-doc5-cfg-check:        TEST.args   = cfg-check
testarg0-doc5-cfg-data:         TEST.args   = cfg-data
testarg0-doc5-cfg-hint:         TEST.args   = cfg-hint
testarg0-doc5-cfg-info:         TEST.args   = cfg-info
testarg0-doc5-cfg-text:         TEST.args   = cfg-text
testarg0-doc5-cfg-regex:        TEST.args   = cfg-regex
testarg0-doc5-gen-wiki:         TEST.args   = gen-wiki
testarg0-doc5-gen-html:         TEST.args   = gen-html
testarg0-doc5-gen-cgi:          TEST.args   = gen-cgi
testarg0-doc5-gen-pod:          TEST.args   = gen-pod

HELP-test.doc6      = targets for testing internal functionality of o-saft-dbx.pm
HELP-test.doc6.log  = same as test.doc6 but store output in '$(TEST.logdir)/'
# o-saft-dbx.pm's --test-* option require data defined in $(SRC.pl), hence using $(SRC.pl)
testarg0-doc6-%:                EXE.pl      = $(SRC.pl)
testarg0-doc6--test-show:       TEST.args   = --test-show
testarg0-doc6--test-data:       TEST.args   = --test-data
testarg0-doc6--test-prot:       TEST.args   = --test-prot
testarg0-doc6--test-regex:      TEST.args   = --test-regex
testarg0-doc6--test-ciphers:    TEST.args   = --test-ciphers
testarg0-doc6--test-ciphers-list:  TEST.args= --test-ciphers-list
testarg0-doc6--test-ciphers-sort:  TEST.args= --test-ciphers-sort

# perldoc
HELP-test.doc9      = targets for testing perldoc of files
HELP-test.doc9.log  = same as test.doc9 but store output in '$(TEST.logdir)/'
testarg0-doc9-%:                EXE.pl      = perldoc
testarg0-doc9-o-saft:           TEST.args   = $(SRC.pl)
testarg0-doc9-osaft:            TEST.args   = $(EXE.osaft)
testarg0-doc9-osaft-data:       TEST.args   = $(EXE.osaftdata)
testarg0-doc9-osaft-ciphers:    TEST.args   = $(EXE.osaftcipher)
testarg0-doc9-osaft-man:        TEST.args   = $(EXE.osaft-man)
testarg0-doc9-osaft-dbx:        TEST.args   = $(EXE.osaft-dbx)
testarg0-doc9-osaft-usr:        TEST.args   = $(EXE.osaft-usr)

ALL.testdoc1    = $(shell awk -F: '/^testarg0-doc1-.*%/{next} /^testarg0-doc1-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc1   = $(ALL.testdoc1)
test.doc1:      $(ALL.test.doc1)
ALL.test.doc1.log=  $(ALL.test.doc1:%=%.log) test.log-compare-hint
test.doc1.log:  $(ALL.test.doc1.log)

ALL.testdoc2    = $(shell awk -F: '/^testarg0-doc2-.*%/{next} /^testarg0-doc2-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc2   = $(ALL.testdoc2)
test.doc2:      $(ALL.test.doc2)
ALL.test.doc2.log=  $(ALL.test.doc2:%=%.log) test.log-compare-hint
test.doc2.log:  $(ALL.test.doc2.log)

ALL.testdoc3    = $(shell awk -F: '/^testarg0-doc3-.*%/{next} /^testarg0-doc3-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc3   = $(ALL.testdoc3)
test.doc3:      $(ALL.test.doc3)
ALL.test.doc3.log=  $(ALL.test.doc3:%=%.log) test.log-compare-hint
test.doc3.log:  $(ALL.test.doc3.log)

ALL.testdoc5    = $(shell awk -F: '/^testarg0-doc5-.*%/{next} /^testarg0-doc5-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc5   = $(ALL.testdoc5)
test.doc5:      $(ALL.test.doc5)
ALL.test.doc5.log=  $(ALL.test.doc5:%=%.log) test.log-compare-hint
test.doc5.log:  $(ALL.test.doc5.log)

ALL.testdoc6    = $(shell awk -F: '/^testarg0-doc6-.*%/{next} /^testarg0-doc6-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc6   = $(ALL.testdoc6)
test.doc6:      $(ALL.test.doc6)
ALL.test.doc6.log=  $(ALL.test.doc6:%=%.log) test.log-compare-hint
test.doc6.log:  $(ALL.test.doc6.log)

ALL.testdoc9    = $(shell awk -F: '/^testarg0-doc9-.*%/{next} /^testarg0-doc9-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc9   = $(ALL.testdoc9)
test.doc9:      $(ALL.test.doc9)
ALL.test.doc9.log=  $(ALL.test.doc9:%=%.log) test.log-compare-hint
test.doc9.log:  $(ALL.test.doc6.log)

test.doc.log-compare:   TEST.target_prefix  = testarg0-doc
test.doc.log-move:      TEST.target_prefix  = testarg0-doc
test.doc.log:           TEST.target_prefix  = testarg0-doc

ALL.testdoc     = $(shell awk -F: '/^testarg0-doc.-.*%/{next} /^testarg0-doc.-/{arr[$$1]=1}$(_AWK_print_arr_END)' $(_MYSELF.doc))
ALL.test.doc    = $(ALL.testdoc)
ALL.test.doc.log= $(ALL.test.doc:%=%.log) test.log-compare-hint

test.doc.all:   $(ALL.test.doc)
test.doc:       test.doc.all
test.doc.log:   $(ALL.test.doc.log)

#_____________________________________________________________________________
#_____________________________________________________________________ test __|

# feed main Makefile
ALL.tests      += $(ALL.test.doc)
ALL.tests.log  += $(ALL.test.doc.log)

